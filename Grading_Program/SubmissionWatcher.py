import time
import shutil
import tempfile
import mysql.connector
from watchdog.events import PatternMatchingEventHandler

class SubmissionWatcher(PatternMatchingEventHandler):
  patterns = ["*.zip"]
  staging_dir = tempfile.mkdtemp(prefix='grader_staging_')

  def __init__(self, sql):
    PatternMatchingEventHandler.__init__(self)
    self.cursor = sql.cursor()

  def on_created(self, event):
    self.process(event)
    path_name = os.path.join(staging_dir, os.path.basename(event.src_path))

    shutil.move(event.src_path, path_name)

    #get 8 char hash (generated by the Submission Program) from file name
    basename   = int(re.search('/(.{8})\\.zip$', file_name).group(1))

    self.cursor.execute("SELECT * FROM %s WHERE submission_name = %d",
               (self.table, basename))
    info = {'attempts':0}
    columns = tuple( [d[0].decode('utf8') for d in self.cursor.description] )
    for row in self.cursor:
      info.update(dict(zip(columns, row)))

    self.cursor.execute("SELECT team_name FROM %s WHERE submission_id = %d",
                (self.table, info['team_id']))
    columns = tuple( [d[0].decode('utf8') for d in self.cursor.description])
    info.update(dict(zip(columns, row)))

    self.cursor.execute("SELECT * FROM %s WHERE problem_id = %d AND team_id = %d",
               (self.table, info['problem_id'], info['team_id']))
    for row in self.cursor:
      info['attempts'] += 1

    queue.put((path_name, info))
